# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Continuous Integration"

on:
  workflow_call:
    inputs:
      extensions:
        required: true
        type: string
      ini-values:
        required: true
        type: string
      composer-options:
        required: true
        type: string
      min-covered-msi:
        required: false
        type: number
        default: 100
      min-msi:
        required: false
        type: number
        default: 100
      composer-outdated-option:
        required: false
        type: string
        default: ""
    secrets:
      envPAT:
        required: true

env:
  TOOLS: "composer:v2"

jobs:
  supported-versions-matrix:
    name: "Supported Versions Matrix"

    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    continue-on-error: false

    outputs:
      extensions: ${{ steps.supported-versions-matrix.outputs.extensions }}
      version: ${{ steps.supported-versions-matrix.outputs.version }}
      upcoming: ${{ steps.supported-versions-matrix.outputs.upcoming }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "detect supported versions"
        id: "supported-versions-matrix"
        uses: "WyriHaximus/github-action-composer-php-versions-in-range@v1"
        with:
          upcomingReleases: true

  validate:
    name: "Validate composer"

    needs: "supported-versions-matrix"

    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Validate composer.json"
        run: "composer validate --strict"

  install:
    name: "Install dependencies"

    needs:
      - "supported-versions-matrix"
      - "validate"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: ${{ needs.supported-versions-matrix.outputs.upcoming == matrix.php }}

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

        dependencies:
          - "highest"
          - "lowest"

        composer-options:
          - ""

        include:
          - operating-system: "ubuntu-20.04"
            php-version: "8.2"
            dependencies: "highest"
            composer-options: " --ignore-platform-reqs"
          - operating-system: "ubuntu-20.04"
            php-version: "8.2"
            dependencies: "lowest"
            composer-options: " --ignore-platform-reqs"
          - operating-system: "ubuntu-22.04"
            php-version: "8.2"
            dependencies: "highest"
            composer-options: " --ignore-platform-reqs"
          - operating-system: "ubuntu-22.04"
            php-version: "8.2"
            dependencies: "lowest"
            composer-options: " --ignore-platform-reqs"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }}${{ matrix.composer-options }}"

      - name: "Check dependencies with composer"
        run: "composer outdated --direct${{ inputs.composer-outdated-option }}"

  mega-lint:
    name: "Linting with nvuillam/mega-linter"

    needs:
      - "supported-versions-matrix"
      - "install"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "highest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Linter"
        # You can override Mega-Linter flavor used to have faster performances
        # More info at https://nvuillam.github.io/mega-linter/flavors/
        uses: "nvuillam/mega-linter/flavors/php@v6.10.0"
        env:
          GITHUB_TOKEN: ${{ secrets.envPAT }}

  php-lint:
    name: "Linting with overtrue/phplint"

    needs:
      - "supported-versions-matrix"
      - "install"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Lint PHP"
        uses: "overtrue/phplint@8.1"

  php-cs-fixer:
    name: "Check Coding Standards with PHP-CS-Fixer"

    if: needs.supported-versions-matrix.outputs.upcoming != matrix.php

    needs:
      - "supported-versions-matrix"
      - "mega-lint"
      - "php-lint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}, cs2pr"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "highest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run friendsofphp/php-cs-fixer"
        run: "vendor/bin/php-cs-fixer fix --dry-run --format=checkstyle | cs2pr"

  phpcs:
    name: "Check Coding Standards with PHPCS"

    if: needs.supported-versions-matrix.outputs.upcoming != matrix.php

    needs:
      - "supported-versions-matrix"
      - "mega-lint"
      - "php-lint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}, cs2pr"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "highest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run squizlabs/php_codesniffer"
        run: "vendor/bin/phpcs --report=checkstyle -q | cs2pr"

  static-code-analysis:
    name: "Static Code Analysis with PHPStan"

    if: needs.supported-versions-matrix.outputs.upcoming != matrix.php

    needs:
      - "supported-versions-matrix"
      - "mega-lint"
      - "php-lint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "highest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run phpstan/phpstan"
        run: "vendor/bin/phpstan analyse -c phpstan.neon --memory-limit=768M --no-progress"

  tests:
    name: "UnitTests with PHPUnit"

    if: needs.supported-versions-matrix.outputs.upcoming != matrix.php

    needs:
      - "supported-versions-matrix"
      - "mega-lint"
      - "php-lint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --no-coverage"

  code-coverage:
    name: "Code Coverage with PHPUnit"

    if: needs.supported-versions-matrix.outputs.upcoming != matrix.php

    needs:
      - "supported-versions-matrix"
      - "tests"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

        dependencies:
          - "highest"
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.21.2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ inputs.extensions }}"
          ini-values: "${{ inputs.ini-values }}"
          coverage: "xdebug"
          tools: "${{ env.TOOLS }}, infection"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --verbose --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3.1.1"
        with:
          file: ".build/coverage/clover.xml"
          flags: "phpunit,php-${{ matrix.php-version }},${{ matrix.operating-system }}"
          verbose: false

      - name: "Run mutation tests with infection/infection"
        run: "infection -s --min-covered-msi=${{ inputs.min-covered-msi }} --min-msi=${{ inputs.min-msi }} --coverage=.build/coverage --logger-github"
